{"version":3,"sources":["components/Filter.js","components/PersonsInput.js","components/PersonsForm.js","components/Persons.js","components/Notification.js","services/personsService.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonsInput","text","PersonsForm","onSubmit","values","onChanges","nameInput","nameOnChange","numInput","numOnChange","type","persons","map","person","name","number","onClick","deleteHandler","id","Notification","message","status","className","API_PERSONS","services","getAll","axios","get","create","newObject","post","remove","delete","update","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personsService","then","res","data","setMessageTimeout","setTimeout","personsDisplay","filter","toLowerCase","includes","event","target","preventDefault","personObject","some","personUpdating","find","window","confirm","catch","error","response","Persons","personDeleting","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edb3ae7c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => (\r\n  <input value={props.value} onChange={props.onChange} />\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonsInput = (props) => {\r\n  return (\r\n    <div>\r\n      {props.text}: <input value={props.value} onChange={props.onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonsInput;\r\n","import React from \"react\";\r\n\r\nimport PersonsInput from \"./PersonsInput\";\r\n\r\nconst PersonsForm = (props) => {\r\n  const { onSubmit, values, onChanges } = props;\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <PersonsInput\r\n        value={values.nameInput}\r\n        onChange={onChanges.nameOnChange}\r\n        text=\"name\"\r\n      />\r\n      <PersonsInput\r\n        value={values.numInput}\r\n        onChange={onChanges.numOnChange}\r\n        text=\"number\"\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonsForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => (\r\n  <div>\r\n    {props.persons.map((person) => (\r\n      <div key={person.id}>\r\n        {person.name} {person.number}{\" \"}\r\n        <button onClick={() => props.deleteHandler(person.id)}>Delete</button>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = (props) => {\r\n  if (props.message.status === \"rejected\")\r\n    return <div className=\"rejected\">{props.message.message}</div>;\r\n  else if (props.message.status === \"resolved\") {\r\n    return <div className=\"resolved\">{props.message.message}</div>;\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst API_PERSONS = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(API_PERSONS);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(API_PERSONS, newObject);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${API_PERSONS}/${id}`);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${API_PERSONS}/${id}`, newObject);\r\n};\r\n\r\nconst services = { getAll, create, remove, update };\r\n\r\nexport default services;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport PersonsForm from \"./components/PersonsForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nimport personsService from \"./services/personsService\";\n\nimport \"./styles/message.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState({ message: \"\", status: \"\" });\n\n  useEffect(() => {\n    personsService.getAll().then((res) => {\n      setPersons(res.data);\n    });\n  }, []);\n\n  const handleFormSubmission = (event) => {\n    event.preventDefault();\n\n    const personObject = { name: newName, number: newNumber };\n\n    if (persons.some((person) => person.name === newName)) {\n      const personUpdating = persons.find((person) => person.name === newName);\n      if (\n        window.confirm(\n          `${personUpdating.name} has already been added to the list. Update number?`\n        )\n      ) {\n        personsService.update(personUpdating.id, personObject).then((res) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== personUpdating.id ? person : res.data\n            )\n          );\n          setMessage({\n            status: \"resolved\",\n            message: `${personUpdating.name} updated`,\n          });\n          setMessageTimeout();\n          setNewName(\"\");\n          setNewNumber(\"\");\n        });\n      }\n    } else\n      personsService\n        .create(personObject)\n        .then((res) => {\n          setPersons([...persons, res.data]);\n          setMessage({\n            status: \"resolved\",\n            message: `${res.data.name} added`,\n          });\n          setMessageTimeout();\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setMessage({\n            status: \"rejected\",\n            message: error.response.data.error,\n          });\n        });\n  };\n\n  const handleDelete = (id) => {\n    const personDeleting = persons.find((person) => person.id === id);\n\n    if (window.confirm(`Delete ${personDeleting.name}?`)) {\n      personsService.remove(id).catch((error) => {\n        setMessage({\n          status: \"rejected\",\n          message: `${personDeleting.name} has already been deleted`,\n        });\n        setMessageTimeout();\n        setPersons(persons.filter((person) => id !== person.id));\n      });\n      setPersons(persons.filter((person) => id !== person.id));\n    }\n  };\n\n  const setMessageTimeout = () => {\n    setTimeout(() => {\n      setMessage({\n        status: \"\",\n        message: \"\",\n      });\n    }, 5000);\n  };\n\n  const handleInputNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleInputNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleInputFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const personsDisplay =\n    newFilter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(newFilter)\n        );\n\n  return (\n    <div>\n      <h2>Filter</h2>\n      <Filter value={newFilter} onChange={handleInputFilterChange} />\n\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <PersonsForm\n        onSubmit={handleFormSubmission}\n        values={{ nameInput: newName, numInput: newNumber }}\n        onChanges={{\n          nameOnChange: handleInputNameChange,\n          numOnChange: handleInputNumberChange,\n        }}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsDisplay} deleteHandler={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}